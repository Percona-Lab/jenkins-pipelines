- job:
    name: manage-ssh-allow-list
    project-type: pipeline
    description: |
        Setup AWS SSH Security group on current Jenkins
        Do not edit this job through the web!
    disabled: false
    concurrent: false
    parallel: false
    properties:
    - build-discarder:
        days-to-keep: -1
        num-to-keep: 10
        artifact-days-to-keep: 0
        artifact-num-to-keep: 0
    parameters:
    - string:
        name: IP
        default:
        description: IP without /32
    dsl: |
      pipeline {
          agent { label "micro-amazon" }
          stages {
              stage('Add IP') {
                  steps {
                      withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'managesshlist', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {
                        sh """
                        #!/bin/bash
                        JENKINS_NAME=\$(echo \${JENKINS_HOME} | awk -F '/' '{print \$3}' | awk -F '.' '{print \$1}')
                        REGIONS="us-east-2 us-west-1 us-west-2 eu-central-1 eu-west-1"

                        if [[ \$JENKINS_NAME == "pmm" ]]; then
                            JENKINS_NAME="pmm-amzn2"
                        fi

                        for REGION in \$REGIONS; do
                            for INSTANCE in \$(aws ec2 describe-instances --query 'Reservations[].Instances[].InstanceId' --filter "Name=tag:Name,Values=jenkins-\$JENKINS_NAME" "Name=instance-state-name,Values=running" --output text --region \${REGION}); do
                                if [[ -n \$INSTANCE ]]; then
                                    SecGroups=\$(aws ec2 describe-instances --instance-ids \$INSTANCE --region \$REGION --query "Reservations[].Instances[].SecurityGroups[]" --output text | grep -E "*SSH*" | awk '{print \$1}')
                                    if [[ -n \$SecGroups ]]; then
                                        aws ec2 authorize-security-group-ingress --group-id "\$SecGroups" --protocol tcp --port 22 --cidr "\${IP}/32" --region \$REGION
                                    fi
                                fi
                            done
                        done
                        """
                      }
                  }
              }
          }
      }
name: Weekly Docker Image Build - perconalab/cloud-qa

on:
  schedule:
    - cron: '0 3 * * 1'  # Every Monday at 03:00 UTC
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      DOCKER_PROJECT: perconalab/cloud-qa
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

    steps:
      - name: Fetch latest version tag from Docker Hub
        id: get_version
        run: |
          echo "Fetching tags of $DOCKER_PROJECT from Docker Hub..."

          RESPONSE=$(curl -s -u "$DOCKERHUB_USERNAME:$DOCKERHUB_TOKEN" \
            "https://hub.docker.com/v2/repositories/$DOCKER_PROJECT/tags/?page_size=100")

          TAGS=$(echo "$RESPONSE" | jq -r '.results // [] | .[].name')

          if [ -z "$TAGS" ]; then
            echo "No tags found. Starting from v1.0.0"
            NEW_VERSION="v1.0.0"
          else
            LATEST_TAG=$(echo "$TAGS" | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n1)
            echo "Latest tag found: $LATEST_TAG"

            if [ -z "$LATEST_TAG" ]; then
              NEW_VERSION="v1.0.0"
            else
              IFS='.' read -r MAJOR MINOR PATCH <<< "${LATEST_TAG#v}"
              PATCH=$((PATCH + 1))
              NEW_VERSION="v$MAJOR.$MINOR.$PATCH"
            fi
          fi

          echo "New version will be: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./cloud/jenkins/docker
          file: ./cloud/jenkins/docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.DOCKER_PROJECT }}:latest
            ${{ env.DOCKER_PROJECT }}:${{ steps.get_version.outputs.new_version }}

- job:
    auth-token: pxc80build
    axes:
    - axis:
        name: Host
        type: label-expression
        values:
        - min-centos-6-x64
        - min-centos-7-x64
        - min-stretch-x64
        - min-xenial-x64
        - min-bionic-x64
        - min-buster-x64
    - axis:
        name: BUILD_TYPE
        type: user-defined
        values:
        - release
        - debug
    block-downstream: false
    block-upstream: true
    builders:
    - copyartifact:
        exclude-pattern: null
        filter: PXB_BIN_TAR_URL
        flatten: true
        project: percona-xtrabackup-8.0-binary-tarball_for_pxc/Host=$Host
        target: ""
        which-build: last-successful
    - copyartifact:
        exclude-pattern: null
        filter: PXB_2_4_BIN_TAR_URL
        flatten: true
        project: percona-xtrabackup-2.4-binaries/Host=$Host
        target: ""
        which-build: last-successful
    - shell: |-
        #!/bin/bash

        if [ -f /usr/bin/yum ]; then
            sudo yum clean all
            sudo yum -y install epel-release
            sudo yum -y install scons gcc gcc-c++ check-devel openssl-devel cmake bison boost-devel libcurl-devel
            sudo yum -y install asio-devel libaio-devel ncurses-devel readline-devel pam-devel socat zlib-devel
            sudo yum -y install numactl-devel centos-release-scl redhat-lsb-core
            sudo yum -y install gcc-c++ devtoolset-7-gcc-c++ devtoolset-7-binutils cmake python-pip python2-pip

            CENTOS_VER=$(lsb_release -sr | awk -F'.' '{print $1}')
            if [[ ${CENTOS_VER} = '6' ]]; then
                sudo yum -y install python34 python34-pip
                sudo pip3 install awscli
            else
                sudo pip install awscli
                sudo pip install --upgrade awscli
            fi

            source /opt/rh/devtoolset-7/enable
        fi
 
        if [ -f /usr/bin/apt-get ]; then
            sudo DEBIAN_FRONTEND=noninteractive apt-get update
            sudo DEBIAN_FRONTEND=noninteractive apt-get -y install make gcc g++ scons bison libasio-dev libssl-dev libtool libc-dev libcurl4-openssl-dev
            sudo DEBIAN_FRONTEND=noninteractive apt-get -y install libaio-dev libncurses-dev zlib1g-dev libz-dev check
            sudo DEBIAN_FRONTEND=noninteractive apt-get -y install openssl cmake libboost-all-dev libreadline-dev libpam-dev socat python3-pip

            sudo pip3 install awscli
            sudo pip install --upgrade awscli
        fi

    - shell: |
        #!/bin/bash

        export LANG=en_US.UTF-8
        REDHAT_VERSION=''

        if [ -f /usr/bin/yum ]; then
            REDHAT_VERSION="rhel$(grep -o 'release [0-9][0-9]*' /etc/redhat-release | cut -d ' ' -f 2)"
        fi

        rm -rf target
        mkdir -p target

        PXB_BIN_TAR_URL=$(cat PXB_BIN_TAR_URL)
        until aws s3 cp --no-progress s3://pxc-build-cache/$PXB_BIN_TAR_URL ./; do
            sleep 5
        done

        PXB_2_4_BIN_TAR_URL=$(cat PXB_2_4_BIN_TAR_URL)
        until aws s3 cp --no-progress s3://pxc-build-cache/$PXB_2_4_BIN_TAR_URL ./; do
            sleep 5
        done

        PXB_TAR=$(ls -1td percona-xtrabackup-2.*.tar.gz | sort --version-sort | tail -n1)
        mv "${PXB_TAR}" ./target

        PXB_TAR=$(ls -1td percona-xtrabackup-8.*.tar.gz | sort --version-sort | tail -n1)
        mv "${PXB_TAR}" ./target

        set -e
        if [ "x${BUILD_TYPE}" = "xdebug" ]; then
            if [ "x$REDHAT_VERSION" = "xrhel6" ]; then
                source /opt/rh/devtoolset-7/enable 
            elif [ "x$REDHAT_VERSION" = "xrhel7" ]; then
                source /opt/rh/devtoolset-7/enable
        fi
            bash -x ./build-ps/build-binary.sh -d ./target
        else
            if [ "x$REDHAT_VERSION" = "xrhel6" ]; then
                source /opt/rh/devtoolset-7/enable
            elif [ "x$REDHAT_VERSION" = "xrhel7" ]; then
                source /opt/rh/devtoolset-7/enable
            fi

            bash -x ./build-ps/build-binary.sh ./target
        fi
        set +e

        PXC_TAR=$(ls ./target/Percona-XtraDB-Cluster-* | awk -F'/' '{print $3}')
        if [[ -n "${PXC_TAR}" ]]; then
            until aws s3 cp --no-progress --acl public-read ./target/$PXC_TAR s3://pxc-build-cache/${BUILD_TAG}/$PXC_TAR; do
                sleep 5
            done
        else
            echo cannot find compiled archive
            exit 1
        fi

        echo "${BUILD_TAG}/$PXC_TAR" > PXC_URL

    concurrent: false
    description: We build PXC binaries on each platform for then using in XB test
      suite.
    disabled: false
    execution-strategy:
      sequential: false
    name: pxc80-build
    node: micro-amazon
    project-type: matrix
    properties:
    - build-discarder:
        artifact-days-to-keep: -1
        artifact-num-to-keep: 5
        days-to-keep: 4
        num-to-keep: 4
        properties:
    - build-blocker:
        blocking-jobs:
          - "percona-xtrabackup-8.0-binary-tarball_for_pxc"
          - "percona-xtrabackup-2.4-binaries"
        block-level: 'GLOBAL'
        queue-scanning: 'DISABLED'
    scm:
      - workspace:
          parent-job: pxc80-clone
          criteria: Any
    publishers:
    - archive:
        allow-empty: false
        artifacts: PXC_URL
        case-sensitive: true
        default-excludes: true
        fingerprint: false
        only-if-success: false
    - trigger:
        project: pxc80-test-mtr
        threshold: SUCCESS
    - workspace-cleanup
    triggers: []
    wrappers:
    - timestamps
    - credentials-binding:
         - amazon-web-services:
            credential-id: c42456e5-c28d-4962-b32c-b75d161bff27
            access-key: AWS_ACCESS_KEY_ID
            secret-key: AWS_SECRET_ACCESS_KEY

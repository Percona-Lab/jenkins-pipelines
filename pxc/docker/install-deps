#!/bin/bash
#
set -o xtrace
set -o errexit
#
DOWNLOAD_ROOT=/tmp/source_downloads
wget_loop() {
    local FILE="$1"
    local URL="$2"

    mkdir -p "${DOWNLOAD_ROOT}"
    until wget --progress=dot:giga -O "${DOWNLOAD_ROOT}/${FILE}" "${URL}"; do
        echo "sleep before retry"
        sleep 1
    done
}
#
if [ -f /usr/bin/yum ]; then
  RHVER="$(rpm --eval %rhel)"
  rpm --eval %_arch > /etc/yum/vars/basearch
  
  yum list installed

  if [[ ${RHVER} -eq 8 ]]; then
      sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-Linux-*
      sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-Linux-*

      # repo for procps-ng-devel
      yum install -y https://pkgs.dyn.su/el8/base/x86_64/raven-release-1.0-2.el8.noarch.rpm
      PKGLIST+=" procps-ng-devel"
  fi

  yum install -y https://repo.percona.com/yum/percona-release-latest.noarch.rpm
  percona-release enable-only tools testing

  until yum -y update; do
    yum clean all
    echo "waiting"
    sleep 1
  done

  PKGLIST+=" wget"

  until yum -y install epel-release; do
    echo "waiting"
    sleep 1
  done

  if [[ ${RHVER} -eq 8 ]]; then
      PKGLIST+=" dnf-utils"
      until yum -y install ${PKGLIST} ; do
        echo "waiting"
        sleep 1
      done

      dnf config-manager --set-enabled powertools
      PKGLIST+=" libedit-devel python3-docutils"
  fi

  if [[ ${RHVER} -eq 9 ]]; then
      PKGLIST+=" dnf-utils"
      until yum -y install ${PKGLIST} ; do
        echo "waiting"
        sleep 1
      done

      dnf config-manager --enable ol9_codeready_builder
      PKGLIST+=" libedit-devel procps-ng-devel"
  fi

  if [[ ${RHVER} -lt 8 ]]; then
      PKGLIST+=" python-docutils procps-ng-devel"
      until yum -y install centos-release-scl; do
        echo "waiting"
        sleep 1
      done
  fi
  until yum -y install ${PKGLIST}; do
    echo "waiting"
    sleep 1
  done

  if [[ ${RHVER} -eq 8 ]]; then
      wget -O /etc/yum.repos.d/percona-dev.repo https://jenkins.percona.com/yum-repo/percona-dev.repo
      dnf config-manager --set-enabled powertools
  fi

  # Percona Server
  PKGLIST=" \
    gcc-c++ gperf ncurses-devel perl readline-devel openssl-devel jemalloc zip unzip \
    time zlib-devel libaio-devel bison cmake pam-devel jemalloc-devel valgrind \
    perl-Time-HiRes openldap-devel perl-Env perl-Data-Dumper libicu-devel perl-Sys-MemInfo \
    perl-JSON perl-Digest perl-Digest-MD5 \
    numactl-devel git which make rpm-build ccache libtool sudo libasan lz4-devel \
    libzstd-devel tzdata zstd mysql-devel perl-DBI perl-DBD-mysql jq openssl perl-XML-Simple libcurl-devel perl-Test-Simple \
    cyrus-sasl-devel cyrus-sasl-scram krb5-devel libudev-devel python3-pip python3-devel libevent-devel \
    "

  # PXC specific
  PKGLIST+=" libmicrohttpd-devel re2-devel check-devel scons libgcrypt-devel libev-devel vim-common \
    perl-CPAN rsync python3 patchelf automake bzip2 gnutls gnutls-devel patch lsof socat qpress stunnel \
    "

    if [[ ${RHVER} -eq 8 ]] || [[ ${RHVER} -eq 9 ]]; then
        PKGLIST+=" lz4 perl-Memoize perl-open valgrind-devel libubsan rpcgen libtirpc-devel boost-devel"
        
        PKGLIST_DEVTOOLSET10+=" gcc-toolset-10-gcc-c++ gcc-toolset-10-binutils gcc-toolset-10-annobin"
        PKGLIST_DEVTOOLSET10+=" gcc-toolset-10-valgrind gcc-toolset-10-valgrind-devel gcc-toolset-10-libatomic-devel"
        PKGLIST_DEVTOOLSET10+=" gcc-toolset-10-libasan-devel gcc-toolset-10-libubsan-devel"

        # Starting from 8.0.29 toolset-11 is the default
        PKGLIST_DEVTOOLSET11+=" gcc-toolset-11-gcc-c++ gcc-toolset-11-binutils gcc-toolset-11-annobin"
        PKGLIST_DEVTOOLSET11+=" gcc-toolset-11-valgrind gcc-toolset-11-valgrind-devel gcc-toolset-11-libatomic-devel"
        PKGLIST_DEVTOOLSET11+=" gcc-toolset-11-libasan-devel gcc-toolset-11-libubsan-devel"
  
        # Starting from 8.0.33 toolset-12 is the default
        PKGLIST_DEVTOOLSET12+=" gcc-toolset-12-gcc-c++ gcc-toolset-12-binutils"
        PKGLIST_DEVTOOLSET12+=" gcc-toolset-12-libatomic-devel"
        PKGLIST_DEVTOOLSET12+=" gcc-toolset-12-libasan-devel gcc-toolset-12-libubsan-devel"
        PKGLIST_DEVTOOLSET12+=" valgrind valgrind-devel"
        PKGLIST_DEVTOOLSET12+=" gcc-toolset-12-annobin-annocheck gcc-toolset-12-annobin-plugin-gcc"        
    fi

    # KH: why?
    if [[ ${RHVER} -ne 8 ]]; then
        PKGLIST+=" asio-devel"
    fi
    
    if [[ ${RHVER} -eq 9 ]]; then
        PKGLIST+=" gflags-devel util-linux libtirpc-devel rpcgen boost-devel libxcrypt-compat ncurses-compat-libs"
    fi

    if [[ ${RHVER} -lt 9 ]]; then
        PKGLIST+=" sysbench MySQL-python redhat-lsb-core"
    fi

# Percona-Server
    if [[ ${RHVER} -gt 6 ]]; then
        PKGLIST+=" libevent-devel"
    fi

#   Percona-Server 8.0
    if [[ ${RHVER} -eq 7 ]]; then
        PKGLIST+=" cmake3 perl-Digest-Perl-MD5 libedit-devel"
        PKGLIST_DEVTOOLSET10+=" devtoolset-10-gcc-c++ devtoolset-10-binutils"
        PKGLIST_DEVTOOLSET10+=" devtoolset-10-valgrind devtoolset-10-valgrind-devel devtoolset-10-libatomic-devel"
        PKGLIST_DEVTOOLSET10+=" devtoolset-10-libasan-devel devtoolset-10-libubsan-devel"

        # Next packages are required by 8.0.29
        PKGLIST_DEVTOOLSET11+=" devtoolset-11-gcc-c++ devtoolset-11-binutils"
        PKGLIST_DEVTOOLSET11+=" devtoolset-11-valgrind devtoolset-11-valgrind-devel devtoolset-11-libatomic-devel"
        PKGLIST_DEVTOOLSET11+=" devtoolset-11-libasan-devel devtoolset-11-libubsan-devel"
    fi

    if [[ ${RHVER} -lt 8 ]]; then
        PKGLIST+=" devtoolset-7-gcc-c++ devtoolset-7-binutils cmake3 "
        PKGLIST+=" devtoolset-7-libasan-devel devtoolset-7-libubsan-devel"
        PKGLIST+=" devtoolset-7-valgrind devtoolset-7-valgrind-devel"
        PKGLIST+=" devtoolset-8-gcc-c++ devtoolset-8-binutils"
        PKGLIST+=" devtoolset-8-libasan-devel devtoolset-8-libubsan-devel"
        PKGLIST+=" devtoolset-8-valgrind devtoolset-8-valgrind-devel perl-Digest-Perl-MD5 libedit-devel"
    fi

    until yum -y install ${PKGLIST} ; do
        echo "waiting"
        sleep 1
    done

    if [[ ${RHVER} -eq 9 ]]; then
        until yum -y install ${PKGLIST_DEVTOOLSET12}; do
            echo "waiting"
            sleep 1
        done           
    elif [[ ${RHVER} -eq 8 ]]; then
        yum -y install centos-release-stream
        until yum -y install ${PKGLIST_DEVTOOLSET10} ${PKGLIST_DEVTOOLSET11} ${PKGLIST_DEVTOOLSET12}; do
            echo "waiting"
            sleep 1
        done       
        yum -y remove centos-release-stream
    elif [[ ${RHVER} -eq 7 ]]; then
        until yum -y --enablerepo=centos-sclo-rh-testing install ${PKGLIST_DEVTOOLSET10} ${PKGLIST_DEVTOOLSET11}; do
            echo "waiting"
            sleep 1
        done
    fi

    if [[ ${RHVER} -eq 8 ]]; then
        yum -y install python2 libtool
        update-alternatives --set python /usr/bin/python2
    fi

#   this is workaround for https://bugs.mysql.com/bug.php?id=95222 as soon as the issue is fixed we need to remove it 
    if [ -f '/anaconda-post.log' ]; then
        rm /anaconda-post.log
    fi
#   Install mysql-connector for QA framework run
    pip3 install mysql-connector mysqlclient
fi

if [ -f /usr/bin/apt-get ]; then
    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections

    until apt-get update; do
        sleep 1
        echo "waiting"
    done

    until apt-get -y install lsb-release gnupg wget bc curl; do
        sleep 1
        echo "waiting"
    done

    curl https://repo.percona.com/apt/percona-release_latest.$(lsb_release -sc)_all.deb --output /tmp/prel.deb && dpkg -i /tmp/prel.deb && rm /tmp/prel.deb
    percona-release enable-only tools testing

    DIST=$(lsb_release -sc)
    if [[ ${DIST} != 'focal' && ${DIST} != 'bullseye' && ${DIST} != 'jammy' && ${DIST} != 'bookworm' ]]; then
        echo "deb http://jenkins.percona.com/apt-repo/ ${DIST} main" > /etc/apt/sources.list.d/percona-dev.list
        wget -q -O - http://jenkins.percona.com/apt-repo/8507EFA5.pub | apt-key add -
        wget -q -O - http://jenkins.percona.com/apt-repo/CD2EFD2A.pub | apt-key add -
    fi

    until apt-get update; do
        sleep 1
        echo "waiting"
    done

    # Percona Server
    PKGLIST=" \
        curl bison cmake perl libssl-dev gcc g++ libaio-dev libldap2-dev libwrap0-dev gdb zip unzip gawk \
        libmecab-dev libncurses5-dev libreadline-dev libpam-dev zlib1g-dev libcurl4-openssl-dev \
        libnuma-dev libjemalloc-dev libc6-dbg valgrind libjson-perl libevent-dev pkg-config \
        libmecab2 mecab mecab-ipadic git autoconf libsasl2-dev libsasl2-modules devscripts \
        debconf debhelper fakeroot po-debconf psmisc ccache libtool sudo liblz4-dev liblz4-tool libedit-dev libssl-dev \
        tzdata golang libunwind-dev zstd python3-mysqldb libdbi-perl libdbd-mysql-perl \
        jq openssl libxml-simple-perl \
        libsasl2-dev libsasl2-modules-gssapi-mit libkrb5-dev libudev-dev libzstd-dev libsys-meminfo-perl \
    "

    # PXC specific
    PKGLIST+=" make build-essential check scons  libgcrypt-dev libev-dev  libasio-dev  vim-common python3-pip \
        libboost-all-dev rsync python3 sysbench patchelf lynx librtmp-dev lsof socat libncurses5 libtinfo5 \
        python3-sphinx stunnel \
    "

    if [[ ${DIST} == "bookworm" ]]; then
        PKGLIST+=" gsasl-common libproc2-dev"
    else
        PKGLIST+=" libgsasl7 libprocps-dev qpress"
    fi

    if [[ ${DIST} == 'jammy' ]]; then
        PKGLIST+=" python2"
    elif [[ ${DIST} == 'bookworm' ]]; then 
        PKGLIST+=" dh-python"
    else
        PKGLIST+=" python"
    fi

    if [[ ${DIST} != 'bullseye' && ${DIST} != 'jammy' && ${DIST} != 'bookworm' ]]; then
        PKGLIST+=" dh-systemd"
    fi

    if [[ ${DIST} == 'jammy' ]] || [[ ${DIST} == 'bullseye' ]] || [[ ${DIST} == 'bookworm' ]]; then
        PKGLIST+=" libgflags-dev util-linux"
    fi

    if [[ ${DIST} != 'focal' && ${DIST} != 'bullseye' && ${DIST} != 'jammy' && ${DIST} != 'bookworm' ]]; then
        PKGLIST+=" python-mysqldb"
    else
        PKGLIST+=" python3-mysqldb"
    fi

    # PS-7834: 8.0.26 requires GCC 8 on bionic
    if [[ ${DIST} == "bionic" ]]; then
        PKGLIST+=" gcc-8 g++-8"
    fi

    DISTRIBUTOR_ID=$(lsb_release -i -s)
    RELEASE=$(lsb_release -r -s)
    if [[ ${DISTRIBUTOR_ID} == Ubuntu ]] && [[ $(echo "${RELEASE} >= 18.0" | bc -l) == 1 ]]; then
        PKGLIST+=" libasan5"
    fi

    if [[ ${RELEASE} > "16.0" ]]; then
        PKGLIST+=" libre2-dev"
    fi

    # On Ubuntu install zstd/libsys-meminfo-perl only for Xenial (16.X) and higher
    if [[ ${DISTRIBUTOR_ID} == Ubuntu ]] && [[ $(echo "${RELEASE} >= 16.0" | bc -l) == 1 ]]; then
        PKGLIST+=" libsys-meminfo-perl"

        if [[ $(echo "${RELEASE} >= 18.0" | bc -l) == 1 ]]; then
            # libzstd-dev for Bionic and higher
            PKGLIST+=" libzstd-dev"
        else
            # libzstd1-dev for Xenial
            PKGLIST+=" libzstd1-dev"
        fi
    fi

    # On Debian install zstd/perl-Sys-MemInfo only for Stretch (9.X) and higher
    if [[ ${DISTRIBUTOR_ID} == Debian ]] && [[ $(echo "${RELEASE} >= 9.0" | bc -l) == 1 ]]; then
        PKGLIST+=" libzstd-dev libsys-meminfo-perl"
    fi

    # For Debian buster install libre2-dev
    if [[ ${DISTRIBUTOR_ID} == Debian ]] && [[ $(echo "${RELEASE} >= 10" | bc -l) == 1 ]]; then
        PKGLIST+=" libre2-dev"
    fi

    until apt-get -y install ${PKGLIST}; do
        echo "waiting"
        sleep 1
    done

    # Install mysql-connector for QA framework run
    if [[ ${DIST} != 'bookworm' ]]; then
	    pip3 install mysql-connector
    else
      pip3 install mysql-connector --break-system-packages
    fi

    apt-get -y install build-essential devscripts
    # deps from spec files
    if [[ ${DIST} != 'bullseye' && ${DIST} != 'jammy' && ${DIST} != 'bookworm' ]]; then
        apt-get -y install debhelper pkg-config cmake dh-systemd
    else
        apt-get -y install debhelper pkg-config cmake
    fi
    # missing build deps
    apt-get -y install libssl-dev gawk lynx zlib1g-dev
    apt-get -y purge librtmp-dev || true
    apt-get -y install automake bzip2 cmake make g++ gcc git openssl libssl-dev libgnutls28-dev libtool patch patchelf
    apt-get -y clean


    if [[ ${DIST} == 'focal' ]]; then
        update-alternatives --install /usr/bin/python python /usr/bin/python3 1
    fi

    if [[ ${DIST} == "bionic" ]]; then
        update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 700 --slave /usr/bin/g++ g++ /usr/bin/g++-7
        update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8
    fi
fi

if [ ! -f /usr/local/lib/libeatmydata.so ]; then
    git clone https://github.com/stewartsmith/libeatmydata /tmp/libeatmydata
    pushd /tmp/libeatmydata
        autoreconf --force --install
        ./configure
        make
        make install
    popd
    rm -rf /tmp/libeatmydata
fi

if [ -f /usr/bin/yum ]; then
    RHVER="$(rpm --eval %rhel)"
    if [[ ${RHVER} -eq 9 ]]; then
        pip3 install --upgrade sphinx==5.3.0
    else
        pip3 install --upgrade sphinx==1.6.7
        if [[ ${RHVER} -eq 7 ]]; then
            pip3 install --upgrade docutils==0.16
        else
            pip3 install --upgrade docutils==0.17
        fi
    fi
fi

export PERL_MM_USE_DEFAULT=1
if [[ ${RHVER} -eq 7 ]]; then
    sudo cpan -T Memcached::libmemcached
    sudo cpan -T Cache::Memcached::libmemcached
else
    cpan -T Memcached::libmemcached
    cpan -T Cache::Memcached::libmemcached
fi

# getting rid of the "fatal: detected dubious ownership in repository at ..." error
git config --system --add safe.directory '*'

# PS-7159 remove localhost from ipv6 
sed -re "s/^(::1.*)\slocalhost\b(.*)$/\1 \2/g" /etc/hosts 1<> /etc/hosts

# NB: resulting docker image will be used for building all branches: 5.6, 5.7, 8.0
# boost 1.59.0 needed for percona-server 5.7
wget_loop 'boost_1_59_0.tar.gz' 'http://downloads.sourceforge.net/boost/boost/1.59.0/boost_1_59_0.tar.gz'

# boost 1.77.0 needed for percona-server 8.0
wget_loop 'boost_1_77_0.tar.bz2' 'http://downloads.sourceforge.net/boost/boost/1.77.0/boost_1_77_0.tar.bz2'

# googletest 1.8.0 needed for percona-server versions 5.6 to 8.0
wget_loop 'googletest-release-1.8.0.zip' 'https://github.com/google/googletest/archive/release-1.8.0.zip'

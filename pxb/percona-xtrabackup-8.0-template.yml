- job:
    axes:
    - axis:
        name: BUILD_TYPE
        type: user-defined
        values:
        - release
        - debug
    - axis:
        name: Host
        type: label-expression
        values:
        - ubuntu-maverick-32bit
        - ubuntu-natty-32bit
        - ubuntu-maverick-64bit
        - ubuntu-natty-64bit
        - ubuntu-utopic-32bit
        - ubuntu-utopic-64bit
        - ubuntu-trusty-32bit
        - ubuntu-trusty-64bit
        - asan
        - debian-jessie-32bit
        - debian-jessie-64bit
    - axis:
        name: xtrabackuptarget
        type: user-defined
        values:
        - innodb80
        - xtradb80
        - galera80
    block-downstream: false
    block-upstream: false
    builders:
    - shell: |-
        #!/bin/bash -x

        if [ -f /usr/bin/yum ]; then
            RHEL=$(rpm --eval %rhel)
            if [[ "${RHEL}" -eq 8 ]]; then         
                PKGLIST+=" binutils-devel python3-pip python3-setuptools python3-wheel"
                PKGLIST+=" libcurl-devel cmake libaio-devel zlib-devel libev-devel bison make gcc"
                PKGLIST+=" rpm-build libgcrypt-devel ncurses-devel readline-devel openssl-devel gcc-c++"
                PKGLIST+=" vim-common rpmlint wget ncurses-compat-libs python2 python2-setuptools python2-wheel"
                PKGLIST+=" lz4 lz4-devel perl-DBD-MySQL"
                until sudo yum -y install ${PKGLIST}; do
                    echo "waiting"
                    sleep 1
                done
            else
                until sudo -E yum -y install epel-release centos-release-scl; do
                    sudo yum clean all
                    sleep 1
                    echo "waiting"
                done
                until sudo -E yum -y makecache; do
                    sudo yum clean all
                    sleep 1
                    echo "waiting"
                done
                sudo yum -y install https://repo.percona.com/yum/percona-release-latest.noarch.rpm
                sudo percona-release disable all
                sudo percona-release enable tools release
            #
                PKGLIST+=" devtoolset-7-gcc-c++ devtoolset-7-binutils"
                PKGLIST+=" devtoolset-7-libasan-devel devtoolset-7-libubsan-devel"
                PKGLIST+=" devtoolset-7-valgrind devtoolset-7-valgrind-devel"
                until sudo -E yum -y install ${PKGLIST}; do
                    echo "waiting"
                    sleep 1
                done
            #
                PKGLIST="wget libcurl-devel cmake cmake3 make gcc gcc-c++ libev-devel openssl-devel"
                PKGLIST="${PKGLIST} libaio-devel perl-DBD-MySQL vim-common ncurses-devel readline-devel"
                PKGLIST="${PKGLIST} zlib-devel python-sphinx python-docutils libgcrypt-devel bison perl-Digest-MD5"
                PKGLIST="${PKGLIST} socat numactl-libs numactl qpress"
                until sudo -E yum -y install ${PKGLIST}; do
                    echo "waiting"
                    sleep 1
                done
            fi
            if [[ ${RHEL} -eq 8 ]]; then
                sudo /usr/bin/pip3 install sphinx
                sudo ln -sf /bin/python3 /bin/python
            fi
        fi
        #
        if [ -f /usr/bin/apt-get ]; then

            sudo rm -f /etc/apt/sources.list.d/percona-dev.list        
            #
            until sudo -E apt-get update; do
                sleep 1
                echo "waiting"
            done
            #
            until sudo -E DEBIAN_FRONTEND=noninteractive apt-get -y install lsb-release gnupg2 curl wget; do
                sleep 1
                echo "waiting"
            done
            #
            wget https://repo.percona.com/apt/percona-release_latest.$(lsb_release -sc)_all.deb
            sudo dpkg -i percona-release_latest.$(lsb_release -sc)_all.deb && rm percona-release_latest.$(lsb_release -sc)_all.deb
            sudo percona-release disable all
            sudo percona-release enable tools release
            until sudo -E apt-get update; do
                sleep 1
                echo "waiting"
            done   
            #
            sudo -E apt-get -y purge eatmydata || true
            #
            DIST=$(lsb_release -sc)

            if [[ "$DIST" != 'focal' ]]; then
                echo "deb http://jenkins.percona.com/apt-repo/ ${DIST} main" | sudo tee /etc/apt/sources.list.d/percona-dev.list
                wget -q -O - http://jenkins.percona.com/apt-repo/8507EFA5.pub | sudo apt-key add -
                wget -q -O - http://jenkins.percona.com/apt-repo/CD2EFD2A.pub | sudo apt-key add -
            fi

            until sudo -E apt-get update; do
                sleep 1
                echo "waiting"
            done
            #
            PKGLIST="bison pkg-config cmake devscripts debconf debhelper automake bison ca-certificates libcurl4-openssl-dev"
            PKGLIST="${PKGLIST} cmake debhelper libaio-dev libncurses-dev libssl-dev libtool libz-dev"
            PKGLIST="${PKGLIST} libgcrypt-dev libev-dev lsb-release python-docutils"
            PKGLIST="${PKGLIST} build-essential rsync libdbd-mysql-perl libnuma1 socat librtmp-dev libtinfo5 qpress liblz4-tool liblz4-1 liblz4-dev"
            if [[ "$DIST" == 'focal' ]]; then
                PKGLIST="${PKGLIST} python3-sphinx"
            else
                PKGLIST="${PKGLIST} python-sphinx"
            fi

            if [[ "$Host" == *"asan" ]] ; then
                PKGLIST="${PKGLIST} libasan4"
            fi
            until sudo -E DEBIAN_FRONTEND=noninteractive apt-get -y install ${PKGLIST}; do
                sleep 1
                echo "waiting"
            done
            #
            sudo -E apt-get -y install libreadline6 || true
            if [ -e /lib/x86_64-linux-gnu/libreadline.so.7 -a ! -e /lib/x86_64-linux-gnu/libreadline.so.6 ]; then
                sudo ln -s /lib/x86_64-linux-gnu/libreadline.so.7 /lib/x86_64-linux-gnu/libreadline.so.6
            fi

            if [[ ${DIST} == 'focal' ]]; then
                sudo ln -sf /usr/bin/python3 /usr/bin/python
            fi

        fi
    - shell: |-
        #!/bin/bash -x
        # CentOS 6 and 7
        if [[ -f /opt/rh/devtoolset-7/enable ]]; then
            source /opt/rh/devtoolset-7/enable
        fi

        RHEL=$(rpm --eval %rhel)
        if [[ "${RHEL}" -eq 8 ]]; then   
            export PATH="/usr/local/bin:$PATH"
        fi

        echo BRANCH = ${BRANCH}
        echo "Building in: " `pwd`

        CMAKE_EXTRA_OPTIONS=${CMAKE_EXTRA_OPTIONS:-}

        CMAKE_EXTRA_OPTIONS="$CMAKE_EXTRA_OPTIONS -DFORCE_INSOURCE_BUILD=1"

        if [ `arch` = "x86_64" ]
        then
            THREADS=$(grep -c ^processor /proc/cpuinfo)
        else
            THREADS=1
        fi

        if [ -d ${WORKSPACE}/xtrabackup ]
        then
            # Old (patch-based) directory layout
            cd ${WORKSPACE}/xtrabackup

            if test "x${BUILD_TYPE}" = "xdebug"
            then
                export DEBUG=1
            fi

            echo '$DEBUG=' $DEBUG

            AUTO_DOWNLOAD=yes ./utils/build.sh ${xtrabackuptarget}

            rm -rf server-tarball
        else
            # New (single binary) directory layout

            cd ${WORKSPACE}

            if [[ "$Host" == *"asan" ]]
            then
                CMAKE_EXTRA_OPTIONS="$CMAKE_EXTRA_OPTIONS -DWITH_ASAN=ON"
            fi

            if [ -f '/usr/bin/yum' ]; then
                cmake_bin='cmake3'
            else
                cmake_bin='cmake'
            fi

            if test "x${BUILD_TYPE}" = "xdebug"
            then
                $cmake_bin -DWITH_DEBUG=ON -DDOWNLOAD_BOOST=1 -DWITH_BOOST=mysql-boost -DWITH_ZLIB=bundled -DWITH_ZSTD=bundled $CMAKE_EXTRA_OPTIONS .
            else
                $cmake_bin -DBUILD_CONFIG=xtrabackup_release -DDOWNLOAD_BOOST=1 -DWITH_BOOST=mysql-boost -DWITH_MAN_PAGES=OFF -DWITH_ZLIB=bundled -DWITH_ZSTD=bundled $CMAKE_EXTRA_OPTIONS .
            fi

            make -k -j${THREADS}
        fi
    - shell: |-
        #!/bin/bash -x

        if [[ ${xtrabackuptarget} == "galera57" ]] || [[ ${xtrabackuptarget} == "xtradb80" ]]; then
            if [ -f /usr/bin/apt-get ]; then
                if [[ $(lsb_release -sc) == "xenial" ]] && [[ $(uname -m) == "i686" ]]; then
                        echo "$(uname -m) is not supported for ${xtrabackuptarget} target, this is a stub we decided to implement in PXB-2368"
                        exit 0
                fi
            fi
        fi

        # CentOS 6 and 7
        if [[ -f /opt/rh/devtoolset-7/enable ]]; then
            source /opt/rh/devtoolset-7/enable
        fi
        if [ -f /usr/bin/yum ]; then
            RHEL=$(rpm --eval %rhel)
            if [[ ${RHEL} -eq 8 ]]; then
                sudo rm /bin/python
                sudo ln -sf /bin/python2 /bin/python
            fi
        elif [ -f /usr/bin/apt-get ]; then
            if [ $(lsb_release -sc) == 'focal' ]; then
                sudo rm /usr/bin/python
                sudo ln -sf /usr/bin/python2 /usr/bin/python
            fi
        fi
        if [ -d ${WORKSPACE}/xtrabackup ]
        then
            # Old (patch-based) directory layout

            cd ${WORKSPACE}/xtrabackup/test
        else
            # New (single binary) directory layout

            cd ${WORKSPACE}/storage/innobase/xtrabackup/test
        fi

        if [[ ! -z ${bootstrap_url} ]]; then
            rm -f bootstrap.sh
            wget -O bootstrap.sh ${bootstrap_url}
            chmod +x bootstrap.sh
        fi

        if [[ ${xtrabackuptarget} == "galera57" ]] || [[ ${xtrabackuptarget} == "xtradb80" ]]; then
            if [ -f /usr/bin/apt-get ]; then
                if [[ $(lsb_release -sc) == "xenial" ]] && [[ $(uname -m) == "i686" ]]; then
                    unsupported=true
                fi
            fi
        fi
        if [[ ! -z ${unsupported} ]] && [[ ${unsupported} == true ]]; then
        cat <<-EOF | tee test_results.subunit
        time: $(date +%Y-%m-%d) $(date +%H:%M:%S)
        test: Compilation & Test run for this flavour(${xtrabackuptarget}) is masked as its not supported on selected platform
        time: $(date +%Y-%m-%d) $(date +%H:%M:%S)
        success: Compilation & Test run for this flavour(${xtrabackuptarget}) is masked as its not supported on selected platform
        EOF
            cp test_results.subunit ${WORKSPACE}
            cat test_results.subunit | ./subunit2junitxml > ${WORKSPACE}/junit.xml || true
            echo "${SSL_VER} is not supported for ${xtrabackuptarget} target, this is a stub we decided to implement in PXB-2368"
            exit 0
        fi

        if [[ $(uname -m) == 'i686' ]]; then
            SSL_VER=$(ls -la {/,/usr/}{lib,lib/i386-linux-gnu}/libssl.so.1.* 2>/dev/null | sed 's/.*[.]so//; s/[^0-9]//g' | head -1)
        else
            SSL_VER=$(ls -la {/,/usr/}{lib64,lib,lib/x86_64-linux-gnu}/libssl.so.1.* 2>/dev/null | sed 's/.*[.]so//; s/[^0-9]//g' | head -1)
        fi
        if [[ ${xtrabackuptarget} == "galera56" ]]
        then
            mkdir -p ${WORKSPACE}/storage/innobase/xtrabackup/server-tarball/${xtrabackuptarget}
            wget --progress=dot:giga \
                -O ${WORKSPACE}/storage/innobase/xtrabackup/server-tarball/${xtrabackuptarget}/Percona-XtraDB-Cluster-$(uname -m).tar.gz \
                https://www.percona.com/downloads/Percona-XtraDB-Cluster-56/Percona-XtraDB-Cluster-5.6.40-26.25/binary/tarball/Percona-XtraDB-Cluster-5.6.40-rel84.0-26.25.1.Linux.$(uname -m).ssl${SSL_VER}.tar.gz
        elif [[ ${xtrabackuptarget} == "galera57" ]] && [[ $(uname -m) == "x86_64" ]]
        then
            mkdir -p ${WORKSPACE}/storage/innobase/xtrabackup/server-tarball/${xtrabackuptarget}
            wget --progress=dot:giga \
                -O ${WORKSPACE}/storage/innobase/xtrabackup/server-tarball/${xtrabackuptarget}/Percona-XtraDB-Cluster-$(uname -m).tar.gz \
                https://www.percona.com/downloads/Percona-XtraDB-Cluster-57/Percona-XtraDB-Cluster-5.7.22-29.26/binary/tarball/Percona-XtraDB-Cluster-5.7.22-rel22-29.26.1.Linux.$(uname -m).ssl${SSL_VER}.tar.gz
        else
            case "${xtrabackuptarget}" in
                xtradb80) ./bootstrap.sh --pxb-type=${BUILD_TYPE} --type=${xtrabackuptarget} --version=${xtradb80_version} ;;
                innodb80) ./bootstrap.sh --pxb-type=${BUILD_TYPE} --type=${xtrabackuptarget} --version=${innodb80_version} ;;
            esac
        fi
    - shell: |-
        #!/bin/bash -x
        # CentOS 6 and 7
        if [[ -f /opt/rh/devtoolset-7/enable ]]; then
            source /opt/rh/devtoolset-7/enable
        fi
        if test -f /usr/local/lib/libeatmydata.so
        then
            export LD_PRELOAD=/usr/local/lib/libeatmydata.so
        elif test -f /usr/lib/libeatmydata.so
        then
            export LD_PRELOAD=/usr/lib/libeatmydata.so
        fi

        if [ -d ${WORKSPACE}/xtrabackup ]
        then
            # Old (patch-based) directory layout

            XB_TEST_ROOT_DIR=${WORKSPACE}/xtrabackup
        else
            # New (single binary) directory layout

            XB_TEST_ROOT_DIR=${WORKSPACE}/storage/innobase/xtrabackup
        fi

        cd ${XB_TEST_ROOT_DIR}/test

        if [[ ${xtrabackuptarget} == "galera57" ]] || [[ ${xtrabackuptarget} == "xtradb80" ]]; then
            if [ -f /usr/bin/apt-get ]; then
                if [[ $(lsb_release -sc) == "xenial" ]] && [[ $(uname -m) == "i686" ]]; then
                    unsupported=true
                fi
            fi
        fi
        if [[ ! -z ${unsupported} ]] && [[ ${unsupported} == true ]]; then
        cat <<-EOF | tee test_results.subunit
        time: $(date +%Y-%m-%d) $(date +%H:%M:%S)
        test: Compilation & Test run for this flavour(${xtrabackuptarget}) is masked as its not supported on selected platform
        time: $(date +%Y-%m-%d) $(date +%H:%M:%S)
        success: Compilation & Test run for this flavour(${xtrabackuptarget}) is masked as its not supported on selected platform
        EOF
            cp test_results.subunit ${WORKSPACE}
            cat test_results.subunit | ./subunit2junitxml > ${WORKSPACE}/junit.xml || true
            echo "${SSL_VER} is not supported for ${xtrabackuptarget} target, this is a stub we decided to implement in PXB-2368"
            exit 0
        fi

        if [ `arch` = "x86_64" ]
        then
            ARCH=x86_64
            BITS=64
            THREADS=$(grep -c ^processor /proc/cpuinfo)
        else
            ARCH=i686
            BITS=32
            THREADS=1
        fi

        if [[ ${xtrabackuptarget} == "galera"* ]]
        then
            rm -rf server
            mkdir server
            tar xfz ${WORKSPACE}/storage/innobase/xtrabackup/server-tarball/${xtrabackuptarget}/Percona-XtraDB-Cluster*$ARCH.tar.gz -C server
            mv server/*/* server/
        fi

        if [[ "$Host" == *"asan" ]]
        then
            # Also use LeakSanitizer
            export ASAN_OPTIONS="detect_leaks=1"
            # disable LD_PRELOAD for ASAN biilds
            export LD_PRELOAD=
        fi

        if [[ ${BUILD_TYPE} == "debug" ]] && [[ ${xtrabackuptarget} == "innodb80" ]]; then
            more_test_arguments+= "-D"
        fi

        # Limit the number of workers to cpu amount
        export XB_TEST_MAX_WORKERS=${THREADS}
        if ! ./run.sh -c ${xtrabackuptarget} ${more_test_arguments}; then
            cat results/setup
        #  status=255
        fi
        cp test_results.subunit ${WORKSPACE}
        (cat test_results.subunit | PYTHONPATH=./python:/usr/local/lib/python:$PYTHONPATH ./subunit2junitxml > ${WORKSPACE}/junit.xml) || true
        #exit $status
    concurrent: false
    description: null
    disabled: true
    execution-strategy:
      sequential: false
    name: 'percona-xtrabackup-8.0-template'
    project-type: matrix
    properties:
    - build-discarder:
        artifact-days-to-keep: -1
        artifact-num-to-keep: -1
        days-to-keep: 3
        num-to-keep: 3
    - inject:
        enabled: true
        keep-build-variables: true
        keep-system-variables: true
        load-from-master: false
        override-build-parameters: false
    publishers:
    - raw:
        xml: !!binary |
          PGlvLmplbmtpbnMucGx1Z2lucy5hbmFseXNpcy5jb3JlLnN0ZXBzLklzc3Vlc1JlY29yZGVyIHBs
          dWdpbj0id2FybmluZ3MtbmdAOS4wLjEiPgogICAgICA8YW5hbHlzaXNUb29scz4KICAgICAgICA8
          aW8uamVua2lucy5wbHVnaW5zLmFuYWx5c2lzLndhcm5pbmdzLkdjYzQ+CiAgICAgICAgICA8aWQg
          Lz4KICAgICAgICAgIDxuYW1lIC8+CiAgICAgICAgICA8cGF0dGVybiAvPgogICAgICAgICAgPHJl
          cG9ydEVuY29kaW5nIC8+CiAgICAgICAgICA8c2tpcFN5bWJvbGljTGlua3M+ZmFsc2U8L3NraXBT
          eW1ib2xpY0xpbmtzPgogICAgICAgIDwvaW8uamVua2lucy5wbHVnaW5zLmFuYWx5c2lzLndhcm5p
          bmdzLkdjYzQ+CiAgICAgIDwvYW5hbHlzaXNUb29scz4KICAgICAgPHNvdXJjZUNvZGVFbmNvZGlu
          ZyAvPgogICAgICA8c291cmNlRGlyZWN0b3J5IC8+CiAgICAgIDxpZ25vcmVRdWFsaXR5R2F0ZT5m
          YWxzZTwvaWdub3JlUXVhbGl0eUdhdGU+CiAgICAgIDxpZ25vcmVGYWlsZWRCdWlsZHM+dHJ1ZTwv
          aWdub3JlRmFpbGVkQnVpbGRzPgogICAgICA8ZmFpbE9uRXJyb3I+ZmFsc2U8L2ZhaWxPbkVycm9y
          PgogICAgICA8aGVhbHRoeT4wPC9oZWFsdGh5PgogICAgICA8dW5oZWFsdGh5PjA8L3VuaGVhbHRo
          eT4KICAgICAgPG1pbmltdW1TZXZlcml0eSBwbHVnaW49ImFuYWx5c2lzLW1vZGVsLWFwaUAxMC4w
          LjAiPgogICAgICAgIDxuYW1lPkxPVzwvbmFtZT4KICAgICAgPC9taW5pbXVtU2V2ZXJpdHk+CiAg
          ICAgIDxmaWx0ZXJzIC8+CiAgICAgIDxpc0VuYWJsZWRGb3JGYWlsdXJlPmZhbHNlPC9pc0VuYWJs
          ZWRGb3JGYWlsdXJlPgogICAgICA8aXNBZ2dyZWdhdGluZ1Jlc3VsdHM+ZmFsc2U8L2lzQWdncmVn
          YXRpbmdSZXN1bHRzPgogICAgICA8aXNCbGFtZURpc2FibGVkPmZhbHNlPC9pc0JsYW1lRGlzYWJs
          ZWQ+CiAgICAgIDxza2lwUHVibGlzaGluZ0NoZWNrcz5mYWxzZTwvc2tpcFB1Ymxpc2hpbmdDaGVj
          a3M+CiAgICAgIDxwdWJsaXNoQWxsSXNzdWVzPmZhbHNlPC9wdWJsaXNoQWxsSXNzdWVzPgogICAg
          ICA8cXVhbGl0eUdhdGVzIC8+CiAgICAgIDx0cmVuZENoYXJ0VHlwZT5BR0dSRUdBVElPTl9UT09M
          UzwvdHJlbmRDaGFydFR5cGU+CiAgICAgIDxzY20gLz4KICAgIDwvaW8uamVua2lucy5wbHVnaW5z
          LmFuYWx5c2lzLmNvcmUuc3RlcHMuSXNzdWVzUmVjb3JkZXI+CiAg
    - junit:
        results: junit.xml
        keep-long-stdio: false
    - workspace-cleanup:
        clean-if:
        - success: true
        - unstable: true
        - failure: true
        - not-built: true
        - aborted: true
        clean-parent: false
        dirmatch: false
        exclude: []
        fail-build: true
        include: []
    triggers: []
    wrappers:
    - timestamps
    - ansicolor:
        colormap: xterm

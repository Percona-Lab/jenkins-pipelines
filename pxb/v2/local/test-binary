#!/bin/bash
#
# Execute this tool to test binary releases
#
#  possible jenkins vars:
#      CMAKE_BUILD_TYPE = (RelWithDebInfo Debug)
#      XTRABACKUP_TARGET
#      XTRABACKUP_TARGET_VERSION
#      BOOTSTRAP_URL

set -o errexit
set -o xtrace
WORKDIR_ABS=$(cd ${1:-./build/}; pwd -P)
rm -fr ${WORKDIR_ABS}/PXB
mkdir -p ${WORKDIR_ABS}/PXB

function errmsg {
cat <<-EOF | tee ${WORKDIR_ABS}/test_results.subunit
time: $(date +%Y-%m-%d) $(date +%H:%M:%S)
test: Compilation & Test run for this flavour(${XTRABACKUP_TARGET}) is masked as its not supported on selected platform
time: $(date +%Y-%m-%d) $(date +%H:%M:%S)
success: Compilation & Test run for this flavour(${XTRABACKUP_TARGET}) is masked as its not supported on selected platform
EOF
  iconv -t UTF-8 ${WORKDIR_ABS}/test_results.subunit | PYTHONPATH=./python:/usr/local/lib/python:$PYTHONPATH ./subunit2junitxml > ${WORKDIR_ABS}/junit.xml || true
  echo "${SSL_VER} is not supported for ${XTRABACKUP_TARGET} target, this is a stub we decided to implement in PXB-2368"
  exit 0
}

tar -C ${WORKDIR_ABS}/PXB --strip-components=1 -zxpf $(ls $WORKDIR_ABS/*.tar.gz | head -1)

# CentOS 7
if [[ -f /opt/rh/devtoolset-7/enable ]]; then
  source /opt/rh/devtoolset-7/enable
fi

status=0
#
# Running XBTR test cases
SSL_VER=$(ls -la {/,/usr/}{lib64,lib,lib/x86_64-linux-gnu}/libssl.so.1.* | sed 's/.*[.]so//; s/[^0-9]//g' | head -1)
echo "Running XBTR suite: $suite"
TEST_DIR=$(dirname "$(find ${WORKDIR_ABS}/PXB -name bootstrap.sh)")
cd ${TEST_DIR}

if [ -f /usr/bin/yum ]; then
  RHEL=$(rpm --eval %rhel)
  if [[ ${RHEL} == 8 ]]; then
    if [[ ${XTRABACKUP_TARGET} == "galera56" ]] || [[ ${XTRABACKUP_TARGET} == "xtradb56" ]]; then
      errmsg
    fi
  elif [[ ${RHEL} == 7 ]]; then
    if [[ ${XTRABACKUP_TARGET} == "galera56" ]]; then
      errmsg
    fi
  fi
else
  if [[ $(lsb_release -sc) == "focal" ]] || [[ $(lsb_release -sc) == "buster" ]]; then
    if [[ ${XTRABACKUP_TARGET} == "galera56" ]] || [[ ${XTRABACKUP_TARGET} == "xtradb56" ]]; then
      errmsg
    fi
  elif [[ $(lsb_release -sc) == "xenial" ]]; then
    if [[ ${XTRABACKUP_TARGET} == "xtradb56" ]]; then
      errmsg
    fi
  elif [[ $(lsb_release -sc) == "bionic" ]]; then
    if [[ ${XTRABACKUP_TARGET} == "galera56" ]]; then
      errmsg
    fi
  fi
fi

mkdir -p server-tarball/${XTRABACKUP_TARGET}
if [[ ${XTRABACKUP_TARGET} == "galera57" ]]; then
    wget --progress=dot:giga \
    -O server-tarball/${XTRABACKUP_TARGET}/Percona-XtraDB-Cluster-5.7.31-rel34-43.2.Linux.x86_64.glibc2.12-minimal.tar.gz \
    https://www.percona.com/downloads/Percona-XtraDB-Cluster-57/Percona-XtraDB-Cluster-5.7.31-31.45-2/binary/tarball/Percona-XtraDB-Cluster-5.7.31-rel34-43.2.Linux.x86_64.glibc2.12-minimal.tar.gz
    rm -rf server
    mkdir server
    tar xfz server-tarball/${XTRABACKUP_TARGET}/Percona-XtraDB-Cluster-5.7.31-rel34-43.2.Linux.x86_64.glibc2.12-minimal.tar.gz -C server
    mv server/*/* server/
elif [[ ${XTRABACKUP_TARGET} == "galera56" ]]; then
    wget --progress=dot:giga \
      -O server-tarball/${XTRABACKUP_TARGET}/Percona-XtraDB-Cluster-$(uname -m).tar.gz \
      https://www.percona.com/downloads/Percona-XtraDB-Cluster-56/Percona-XtraDB-Cluster-5.6.49-28.42-2/binary/tarball/Percona-XtraDB-Cluster-5.6.49-rel89.0-28.42.2.Linux.$(uname -m).ssl${SSL_VER}.tar.gz
    rm -rf server
    mkdir server
    tar xfz server-tarball/${XTRABACKUP_TARGET}/Percona-XtraDB-Cluster-$(uname -m).tar.gz -C server
    mv server/*/* server/
else
    if [[ -n ${BOOTSTRAP_URL} ]]; then
      sudo rm -f bootstrap.sh
      sudo wget -O bootstrap.sh ${BOOTSTRAP_URL}
      sudo chmod +x bootstrap.sh
    fi
    ./bootstrap.sh --pxb-type=${CMAKE_BUILD_TYPE} --type=${XTRABACKUP_TARGET} --version=${XTRABACKUP_TARGET_VERSION}
fi
if [[ ${CMAKE_BUILD_TYPE} == "Debug" ]]; then
    if [[ ${XTRABACKUP_TARGET} == "innodb80" ]] || [[ ${XTRABACKUP_TARGET} == "innodb57" ]]; then
        XBTR_ARGS+="-D"
    fi
fi
./run.sh ${XBTR_ARGS} -f | tee -a ${WORKDIR_ABS}/xbtr.output
cat results/setup
sudo cp -r ${TEST_DIR}/results/* ${WORKDIR_ABS}/
cp test_results.subunit ${WORKDIR_ABS}
iconv -t UTF-8 test_results.subunit | PYTHONPATH=./python:/usr/local/lib/python:$PYTHONPATH ./subunit2junitxml > ${WORKDIR_ABS}/junit.xml || true
exit $status

#!/bin/bash

set -o errexit
set -o xtrace

ROOT_DIR=$(cd $(dirname $0)/../sources; pwd -P)
SCRIPTS_DIR=$(cd $(dirname $0)/../local; pwd -P)
SOURCE_IMAGE=${1:-centos:7}

if [[ ${SOURCE_IMAGE} == 'asan' ]]; then
    SOURCE_IMAGE='centos:7'
fi

if [[ ${WITH_AZURITE} == "ON" ]]; then
    if [[ $(docker network list | grep bridge-azurite) != *bridge-azurite* ]]; then
        docker network create bridge-azurite
    fi
    docker run -d -p 10000:10000 -p 10001:10001 --name azurite --network bridge-azurite mcr.microsoft.com/azure-storage/azurite:3.14.0

    AZURITE_DOCKER_FLAG="--network bridge-azurite"
fi


XTRABACKUP_TARGET_VERSION=$(set | grep -i $XTRABACKUP_TARGET'_VERSION' | awk -F '=' '{print $2}')

docker run --rm \
    --security-opt seccomp=unconfined \
    --mount type=bind,source=${ROOT_DIR},destination=/tmp/pxb \
    --mount type=bind,source=${SCRIPTS_DIR},destination=/tmp/scripts \
    ${AZURITE_DOCKER_FLAG} \
    public.ecr.aws/e7j3v3n0/pxc-build:${SOURCE_IMAGE//[:\/]/-} \
    sh -c "
    set -o errexit
    set -o xtrace

    export CMAKE_BUILD_TYPE='${CMAKE_BUILD_TYPE}'
    export XBTR_ARGS='${XBTR_ARGS}'
    export XTRABACKUP_TARGET='${XTRABACKUP_TARGET}'
    export XTRABACKUP_TARGET_VERSION='${XTRABACKUP_TARGET_VERSION}'
    export BOOTSTRAP_URL='${BOOTSTRAP_URL}'
    export WITH_AZURITE='${WITH_AZURITE}'
    export LANG=en_AU.UTF-8

    mkdir /tmp/results
    cp /tmp/pxb/results/*.tar.gz /tmp/results

    bash -x /tmp/scripts/test-binary /tmp/results

    sudo mv /tmp/results/*.xml /tmp/results/*.output /tmp/results/test_results.subunit /tmp/results/results/ /tmp/pxb/results/ || true
    sudo chown $(id -u):$(id -g) -R /tmp/pxb/results/
"
